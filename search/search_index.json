{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Arganic","text":"<p>Arganic: Flexible Decorators for Enhanced Python Classes and Functions</p> <p>Arganic is a Python library that provides a comprehensive set of decorators for managing classes, methods, and functions with advanced features such as required parameters, validators, type checking, read/write accesses, default values, and choices. By leveraging Python's 'args' and '*kwargs', Arganic empowers developers to enhance the functionality of their codebase with ease.</p>"},{"location":"#key-features","title":"Key Features:","text":"<ul> <li>Decorators for Classes, Methods, and Functions: Apply decorators to classes, methods, and functions to extend their functionality and behavior.</li> <li>Required Parameters: Define required parameters for methods and functions to ensure essential inputs are provided.</li> <li>Validator Support: Validate method arguments, function parameters, and class properties using built-in or custom validators.</li> <li>Type Checking: Enforce type constraints and ensure type consistency with flexible type checking capabilities.</li> <li>Read/Write Access Control: Define read-only or write-only properties for classes, methods, and functions as needed.</li> <li>Default Values: Set default values for function arguments, method parameters, and class properties to streamline code logic.</li> <li>Choice Selection: Specify a list of choices for method arguments and function parameters, restricting input values to predefined options.</li> </ul>"}]}